1.可视化的音乐
https://wavesurfer-js.org/docs/methods.html
<script src="https://cdn.bootcss.com/wavesurfer.js/2.0.5/wavesurfer.min.js"></script>
<body>
	<div id="waveform"></div>
	<button id="play">开始</button>
	<button id="pause">暂停</button>
</body>
<script>
	var waveform1=new WaveSurfer();

	var wavesurfer = WaveSurfer.create({
	  container: '#waveform',//容器
	  waveColor: 'red',//未播放的波形颜色
	  progressColor: 'yellow',//已播放波形颜色
	  splitChannels: true,
	  scrollParent: false,//使波形能够向左边滚动
	  height: 50,//波形的高度
	  audioRate:1,//播放音乐的速度,默认1,值越大速度越快
	  barHeight:1,//波形的高度,默认1,值越大越高
	  barWidth:1//每一条波形的宽度,没有默认值
	  cursorColor:'#00ff00',
	  hideScrollbar:true,//隐藏水平滚动条
	  autoCenter:true,//如果存在水平滚动条,将围绕进度对中波形
	});
	//当音频准备好之后
	wavesurfer.on('ready',function(){
		var play=document.querySelector('#play');
		var pause=document.querySelector('#pause');
		play.onclick=function(){
			wavesurfer.play();
		}
		pause.onclick=function(){
			wavesurfer.pause();
		}
	})

	wavesurfer.getCurrentTime()//返回当前播放的时间,单位s
	wavesurfer.isPlaying()//判断是否正在播放
	wavesurfer.play()//开始播放
	wavesurfer.pause()//停止播放
	//音频路径
	wavesurfer.load('11.mp3');
</script>
============================================================================

2.地图插件
http://api.map.baidu.com/lbsapi/creatmap/?qq-pf-to=pcqq.group
============================================================================

3.图片查看器
http://www.jq22.com/jquery-info6536
<link href="https://cdn.bootcss.com/viewerjs/1.0.0/viewer.min.css" rel="stylesheet">
<script src="https://cdn.bootcss.com/viewerjs/1.0.0/viewer.min.js"></script>
<img src="" alt="" id='img1'>
<script>
	new Viewer(document.getElementById('img1'),{
		inline:false,//启用inline模式
		button:true,//显示右上角关闭按钮
		navbar:true,//显示缩略图导航
		title:true,//显示图片信息
		toolbar:true,//显示工具栏
		tooltip:true,//显示缩放百分比
		movable:true,//图片是否可移动
		zoomable:true,//图片是否可缩放
		totatable:true,//图片是否可旋转
		scalable:true,//图片是否可翻转
		transition:true,//使用css3过度
		fullscreen:true,//播放时是否全屏
		keyboard:true,//是否支持键盘
		interval:5000,//播放间隔时间,ms
		zoomRatio:0.1,//鼠标滚动时的缩放比例
		minZoomRation:0.01,//最小缩放比例
		maxZoomRatio:100,//最大缩放比例
		zIndex:2015,//设置图片查看器 modal 模式时的 z-index
		zIndexInline:0,//设置图片查看器 inline 模式时的 z-index
		url:''//设置大图片的url
	});
</script>
============================================================================

4.animate库演示地址
https://daneden.github.io/animate.css/
引入文件
<link href="https://cdn.bootcss.com/animate.css/3.5.2/animate.min.css" rel="stylesheet">
使用
<h1 class="animated bounceIn">你好</h1>
animated类动画
infinite无限循环
其他动画类地址参考https://github.com/daneden/animate.css

============================================================================
5.图片懒加载
http://www.jq22.com/jquery-info11629
<script src="https://cdn.bootcss.com/jquery/3.3.1/jquery.min.js"></script>
<script src='https://raw.githubusercontent.com/channg/EasyLazyload.js/master/dist/EasyLazyload.min.js'></script>
使用
<img data-lazy-src="..." alt="">
<script>
	lazyLoadInit({
        coverColor:"white",//图片即将显示时覆盖层的颜色
        coverDiv:"<h1>test</h1>",//图片即将显示时自定义显示的组件
        offsetBottom:0,//下方图片距离底部的距离开始加载
        offsetTopm:0,//上方图片距离顶部的距离开始加载
        showTime:1100,//动画时长
        onLoadBackEnd:function(idx,dom){//图片完全出现的回调函数,参数为,图片的下标和dom jquery对象
            console.log("onLoadBackEnd:"+i);
        }
        ,onLoadBackStart:function(idx,dom){//图片下载完成的回调函数
            console.log("onLoadBackStart:"+i);
        }
    });
</script>
============================================================================
swiper插件
http://www.swiper.com.cn/
<link href="https://cdn.bootcss.com/Swiper/4.2.2/css/swiper.min.css" rel="stylesheet">
<script src="https://cdn.bootcss.com/Swiper/4.2.2/js/swiper.min.js"></script>
2.添加html标签
<div class="swiper-container">
    <div class="swiper-wrapper">
        <div class="swiper-slide">Slide 1</div>
        <div class="swiper-slide">Slide 2</div>
        <div class="swiper-slide">Slide 3</div>
    </div>
    <!-- 如果需要分页器 -->
    <div class="swiper-pagination"></div>
    
    <!-- 如果需要导航按钮 -->
    <div class="swiper-button-prev"></div>
    <div class="swiper-button-next"></div>
    
    <!-- 如果需要滚动条 -->
    <div class="swiper-scrollbar"></div>
</div>

样式自己修改

js控制
<script>        
  var mySwiper = new Swiper ('.swiper-container', {
    direction: 'horizontal'|'vertical',//控制滑动方向,水平,垂直
    loop: true,//循环滚动
    initialSlide :0,//默认命中的项,从0开始
    speed:300,//切换速度
    parallax:true,//开启视差效果,

    //多个显示配置
    slidesPerView:1,//一次显示的个数
    centeredSlides:true,//多个显示时,命中的居中
    slidesPerGroup:1,//规定多少个元素为一组
    spaceBetween:0,//在slide之间设置距离,间隙
    slidesOffsetBefore:0,//设置slide与左边界的预留距离
    slidesOffsetAfter:0,//设置slide与右边界的预留距离

    //双向控制,可实现缩略图轮播
    controller:{
    	control:[swiper2],设置为另外一个Swiper实例开始控制该Swiper。
    	inverse: true,//true表示控制方向倒转
    }


    //切换效果
    effect:'fade'|'cube'|'coverflow'|'flip',//切换效果,淡入淡出,像一个立方体盒子,有立体感,翻转

    //自动切换
	autoplay:{
    	delay:1000,//每隔多久切换一次
    	disableOnInteraction: false,//用户触摸之后自动切换不会停止
    	waitForTransition: false,//在过渡动画结束后自动切换才开始计时
    },

    //鼠标滚轮控制切换
    mousewheel:true,
    invert:true,//鼠标反向控制

    // 如果需要分页器
    pagination: {
      el: '.swiper-pagination',
    },
    
    // 如果需要前进后退按钮
    navigation: {
      nextEl: '.swiper-button-next',
      prevEl: '.swiper-button-prev',
    },
    
    // 如果需要滚动条
    scrollbar: {
      el: '.swiper-scrollbar',
    },
  })

  方法
  //下一个
  mySwiper.slideNext();
  //上一个
  mySwiper.slidePrev();
  //切换到指定的slide
  mySwiper.slideTo(索引);
  //循环模式下切换到指定slide
  mySwiper.slideToLoop(索引);
  //销毁swiper对象
  mySwiper.destroy();
  //删除slide
  mySwiper.removeSlide(索引)
  //绑定事件
  mySwiper.on('click', function(){
    alert('你点了Swiper');
  })
  //移除事件
  mySwiper.off('click', fn())

  //开启调焦功能,可放大缩小查看
  <div class="swiper-slide"> <div class="swiper-zoom-container"> <img src="path/to/image"> </div> </div>
  zoom : true,配置
</script>