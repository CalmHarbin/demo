表格属性与样式
属性
	rowspan="num"  //跨行
	colspan="num"  //跨列
	border=1       //1px的边框
样式
	border-collapse:"collapse"   //合并单元格
	border-spacing:5px;          //相邻单元格之间的距离
	empty-cells:show|hide        //是否显示空单元格边框
	tabel-layout:fixed           //当内容过长时,不拉伸单元格
	text-align:                  //水平对齐方式
	vertical-align               //垂直对齐方式

===========================================================================
arguments对象
伪数组,用来储存实参
arguments.length表示实参的个数
arguments.callee.length表示形参的个数
arguments.callee  表示当前的函数
===========================================================================
IIFE,立即执行函数
(function($) { 
 //代码
 } )(jQuery);
===========================================================================
 逻辑与返回第一个是 false 的操作数 或者 最后一个是 true的操作数
console.log(1 && 2 && 0); //0
console.log(1 && 0 && 1); //0
console.log(1 && 2 && 3); //3
如果某个操作数为 false，则该操作数之后的操作数都不会被计算

逻辑或返回第一个是 true 的操作数 或者 最后一个是 false的操作数
console.log(1 || 2 || 0); //1
console.log(0 || 2 || 1); //2
console.log(0 || 0 || false); //false
如果某个操作数为 true，则该操作数之后的操作数都不会被计算
逻辑运算符优先级比较
!>&&>||
===========================================================================
Object.create() 方法会使用指定的原型对象及其属性去创建一个新的对象
例如
var obj1={a:1,b:2}
var obj2=Object.create(obj1);
console.log(obj2.__proto__===obj1);//true
//自己创建一个create函数,
		function create(obj){
			function Fn(){};//构造一个函数
			Fn.prototype=obj;//让这个构造函数的原型对象改变为obj;
			return new Fn();//返回Fn的一个实例,该实例的__proto__就是obj;
		}
===========================================================================
内置构造函数
Number()
String()
Boolean()
Array()
Object()
Function()
Date()
RegExp()
使用new运算符,返回的是一个对象
var a=new Number(3);
console.log(a);//3
console.log(typeof a);//object
===========================================================================
<select></select>
ele.selectedIndex 属性可设置或返回下拉列表中被选选项的索引号
===========================================================================

HTTP请求状态码
200:服务器已成功的处理了请求,并提供了请求的网页
204:服务器已成功的处理了请求,但没有返回任何内容

301:请求的网页已永久的移动到了新位置
302:请求的网页临时移动到了新位置
304:网页字上次请求后没有更新

400:服务器不理解请求的语法
403:服务器拒绝了请求
404:服务器找不到请求的网页
410:请求的资源被永久的删除了

500:服务器遇到了错误,无法完成请求
503:服务器目前无法使用
===========================================================================

查看npm的安装路径
npm config get prefix
===========================================================================

自行实现call,apply和bind方法
Function.prototype.call2=function(content){
  // 在对象身上绑定函数,使this指向改对象
  content.fn=this;
  //储存参数
  var args=[];
  for(var i=1,len=arguments.length;i<len;i++){
    args.push(arguments[i]);
  }
  //执行该函数
  var str="content.fn("+args+")";
  eval(str);
  //清空函数
  content.fn=null;
}

Function.prototype.apply2=function(content){
  // 在对象身上绑定函数,使this指向改对象
  content.fn=this;
  //储存参数
  var args=arguments[1];
  //执行该函数
  var str="content.fn("+args+")";
  eval(str);
  //清空函数
  content.fn=null;
}

Function.prototype.bind2=function(content){
  //保存当前this;
  var that=this;
  return function(){
    // 在对象身上绑定函数,使this指向改对象
    content.fn=that;
    // //执行该函数
    var str="content.fn("+Array.from(arguments)+")";
    eval(str);
    content.fn=null;
  }
}
var json1={
  name:'user1',
  getName:function(a,b){
    console.log(this.name,a,b)
  }
}
var json2={
  name:'user2'
}
json1.getName.call(json2,1,2);
json1.getName.call2(json2,1,2);
json1.getName.apply(json2,[1,2]);
json1.getName.apply2(json2,[1,2]);
var bindfn=json1.getName.bind(json2);
var bindfn2=json1.getName.bind2(json2);
bindfn(1,2);
bindfn2(1,2);

===========================================================================
判断是否在当前页面
//判断是否在当前页面
var hiddenProperty = 'hidden' in document ? 'hidden' :    
        'webkitHidden' in document ? 'webkitHidden' :    
        'mozHidden' in document ? 'mozHidden' :    
        null;
    var visibilityChangeEvent = hiddenProperty.replace(/hidden/i, 'visibilitychange');
    var onVisibilityChange = function(){
        if (!document[hiddenProperty]) {
          //在当前页
            
        }else{
          //离开当前页
            
        }
    }
document.addEventListener(visibilityChangeEvent, onVisibilityChange);

===========================================================================
将图片地址转为base64格式数据
function convertImgToBase64(url, callback, outputFormat){
  var canvas = document.createElement('CANVAS'),
    ctx = canvas.getContext('2d'),
    img = new Image;
  //防止资源跨域
  img.crossOrigin = 'Anonymous';
  img.onload = function(){
    canvas.height = img.height;
    canvas.width = img.width;
    ctx.drawImage(img,0,0);
    //获取base64格式数据
    var dataURL = canvas.toDataURL(outputFormat || 'image/png');
    callback.call(this, dataURL);
    canvas = null; 
  };
  img.src = url;
}


convertImgToBase64('http://bit.ly/18g0VNp', function(base64Img){
  // Base64DataURL
});

==============================================================================
get或post请求中文乱码的解决办法
js中将中文转16进制   encodeURI("中文");
js中将16进制转中文   decodeURI("16进制");
php中将中文转16进制  urlencode("中文");
php中将16进制转中文  urldecode("16进制");

==============================================================================
js将图片转base64格式
var img = "imgurl";//imgurl 就是你的图片路径  

function getBase64Image(img) {  
     var canvas = document.createElement("canvas");  
     canvas.width = img.width;  
     canvas.height = img.height;  
     var ctx = canvas.getContext("2d");  
     ctx.drawImage(img, 0, 0, img.width, img.height);  
     var ext = img.src.substring(img.src.lastIndexOf(".")+1).toLowerCase();  
     var dataURL = canvas.toDataURL("image/"+ext);  
     return dataURL;  
}  

var image = new Image();  
image.src = img;  
image.onload = function(){  
  var base64 = getBase64Image(image);  
  console.log(base64);  
}  

=================================================================================
拨打电话
<a href="tel:13764567708">移动WEB页面JS一键拨打号码咨询功能</a>

发送短信
<a href="sms:13764567708">移动WEB页面JS一键发送短信咨询功能</a>

手机震动
if (navigator.vibrate) {
    //vibrate 1 second
    navigator.vibrate(1000);
} else if (navigator.webkitVibrate) {
    navigator.webkitVibrate(1000);
}
调用手机照相机
<input type="file" accept="image/*" capture="camera">

调用手机摄像机
<input type="file" accept="video/*" capture="camcorder">

调用手机录音机
<input type="file" accept="audio/*" capture="microphone">

选择图片
<input type="file" accept="image/*">

调用手机自带扫一扫功能
<a href="scanner://com.xiaomi.scanner/main">扫一扫</a>